## -*- encoding: utf-8 -*-


# This file was *autogenerated* from the file main-moonmath.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_36 = Integer(36); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_9973 = Integer(9973); _sage_const_42 = Integer(42); _sage_const_44 = Integer(44); _sage_const_4 = Integer(4); _sage_const_45 = Integer(45); _sage_const_5 = Integer(5); _sage_const_82 = Integer(82); _sage_const_86 = Integer(86); _sage_const_88 = Integer(88); _sage_const_6 = Integer(6); _sage_const_102 = Integer(102); _sage_const_13 = Integer(13); _sage_const_8 = Integer(8); _sage_const_106 = Integer(106); _sage_const_108 = Integer(108); _sage_const_7 = Integer(7); _sage_const_1076 = Integer(1076); _sage_const_26 = Integer(26); _sage_const_1083 = Integer(1083); _sage_const_1085 = Integer(1085); _sage_const_27 = Integer(27); _sage_const_1093 = Integer(1093); _sage_const_1281 = Integer(1281); _sage_const_28 = Integer(28); _sage_const_1294 = Integer(1294); _sage_const_1296 = Integer(1296); _sage_const_29 = Integer(29); _sage_const_1298 = Integer(1298); _sage_const_1300 = Integer(1300); _sage_const_30 = Integer(30); _sage_const_1303 = Integer(1303); _sage_const_1313 = Integer(1313); _sage_const_31 = Integer(31); _sage_const_1316 = Integer(1316); _sage_const_1370 = Integer(1370); _sage_const_32 = Integer(32); _sage_const_1376 = Integer(1376); _sage_const_1407 = Integer(1407); _sage_const_33 = Integer(33); _sage_const_1412 = Integer(1412); _sage_const_1456 = Integer(1456); _sage_const_34 = Integer(34); _sage_const_1471 = Integer(1471); _sage_const_1632 = Integer(1632); _sage_const_35 = Integer(35); _sage_const_1643 = Integer(1643); _sage_const_1648 = Integer(1648); _sage_const_1662 = Integer(1662); _sage_const_1664 = Integer(1664); _sage_const_37 = Integer(37); _sage_const_1677 = Integer(1677); _sage_const_1687 = Integer(1687); _sage_const_38 = Integer(38); _sage_const_1701 = Integer(1701); _sage_const_1748 = Integer(1748); _sage_const_39 = Integer(39); _sage_const_1753 = Integer(1753); _sage_const_1766 = Integer(1766); _sage_const_40 = Integer(40); _sage_const_1778 = Integer(1778); _sage_const_1782 = Integer(1782); _sage_const_41 = Integer(41); _sage_const_1796 = Integer(1796); _sage_const_1802 = Integer(1802); _sage_const_1804 = Integer(1804); _sage_const_1806 = Integer(1806); _sage_const_1825 = Integer(1825); _sage_const_1833 = Integer(1833); _sage_const_1907 = Integer(1907); _sage_const_43 = Integer(43); _sage_const_1913 = Integer(1913); _sage_const_1919 = Integer(1919); _sage_const_1930 = Integer(1930); _sage_const_1936 = Integer(1936); _sage_const_1942 = Integer(1942); _sage_const_1977 = Integer(1977); _sage_const_46 = Integer(46); _sage_const_1981 = Integer(1981)## This file (main-moonmath.sagetex.sage) was *autogenerated* from main-moonmath.tex with sagetex.sty version 2020/08/12 v3.5.
import sagetex
_st_ = sagetex.SageTeXProcessor('main-moonmath', version='2020/08/12 v3.5', version_check=True)
_st_.current_tex_line = _sage_const_36 
_st_.blockbegin()
try:
 E1 = EllipticCurve([-_sage_const_2 ,_sage_const_1 ])
 C1 = E1.plot()
 F = GF(_sage_const_9973 )
 E2 = EllipticCurve(F, [-_sage_const_2 ,_sage_const_1 ])
 C2 = E2.plot()
except:
 _st_.goboom(_sage_const_42 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_44 
 _st_.plot(_sage_const_4 , format='notprovided', _p_=C1)
except:
 _st_.goboom(_sage_const_44 )
try:
 _st_.current_tex_line = _sage_const_45 
 _st_.plot(_sage_const_5 , format='notprovided', _p_=C2)
except:
 _st_.goboom(_sage_const_45 )
_st_.current_tex_line = _sage_const_82 
_st_.blockbegin()
try:
 F5 = GF(_sage_const_5 )
 E1 = EllipticCurve(F5, [_sage_const_1 ,_sage_const_1 ])
 C1 = E1.plot()
except:
 _st_.goboom(_sage_const_86 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_88 
 _st_.plot(_sage_const_6 , format='notprovided', _p_=C1)
except:
 _st_.goboom(_sage_const_88 )
_st_.current_tex_line = _sage_const_102 
_st_.blockbegin()
try:
 F13 = GF(_sage_const_13 )
 PJJ_13 = EllipticCurve(F13, [_sage_const_8 ,_sage_const_8 ])
 CPJJ_13 = PJJ_13.plot()
except:
 _st_.goboom(_sage_const_106 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_108 
 _st_.plot(_sage_const_7 , format='notprovided', _p_=CPJJ_13)
except:
 _st_.goboom(_sage_const_108 )
try:
 _st_.current_tex_line = _sage_const_1076 
 _st_.commandline(_sage_const_26 , r"""
Sage: L_G1 = []
Sage: for P in E1_3:
....:     PiP = E1F5_2([a.frobenius() for a in P]) # pi(P)
....:     if P == PiP:
....:         L_G1.append(P)
Sage: G1 = Set(L_G1)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1083 )
try:
 _st_.current_tex_line = _sage_const_1085 
 _st_.commandline(_sage_const_27 , r"""
Sage: L_G2 = []
Sage: for P in E1_3:
....:     PiP = E1F5_2([a.frobenius() for a in P]) # pi(P)
....:     pP = 5*P # [5]P
....:     if pP == PiP:
....:         L_G2.append(P)
Sage: G2 = Set(L_G2)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1093 )
try:
 _st_.current_tex_line = _sage_const_1281 
 _st_.commandline(_sage_const_28 , r"""
Sage: import Crypto
Sage: from Crypto.Hash import SHA256
Sage: def try_hash(s,c):
....:     s_1 = s+c
....:     h = SHA256.new(s_1)
....:     d = h.hexdigest()
....:     d = Integer(d,base=16)
....:     sign = d.str(2)[-5:-4]
....:     d = d.str(2)[-4:]
....:     z = Integer(d,base=2)
....:     return (z,sign)
Sage: try_hash('10011001111010110100000111','0000')
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1294 )
try:
 _st_.current_tex_line = _sage_const_1296 
 _st_.commandline(_sage_const_29 , r"""
Sage: try_hash('10011001111010110100000111','0001')
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1298 )
try:
 _st_.current_tex_line = _sage_const_1300 
 _st_.commandline(_sage_const_30 , r"""
Sage: try_hash('10011001111010110100000111','0010')
Sage: try_hash('10011001111010110100000111','0011')
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1303 )
try:
 _st_.current_tex_line = _sage_const_1313 
 _st_.commandline(_sage_const_31 , r"""
Sage: try_hash('10011001111010110100000111','0100')
Sage: try_hash('10011001111010110100000111','0101')
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1316 )
try:
 _st_.current_tex_line = _sage_const_1370 
 _st_.commandline(_sage_const_32 , r"""
Sage: p = 115792089237316195423570985008687907853269984665640564039457584007908834671663
Sage: r = 115792089237316195423570985008687907852837564279074904382605163141518161494337
Sage: t = p + 1 -r
Sage: t.nbits()
Sage: abs(RR(t)) <= 2*sqrt(RR(p))
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1376 )
try:
 _st_.current_tex_line = _sage_const_1407 
 _st_.commandline(_sage_const_33 , r"""
Sage: p = 115792089237316195423570985008687907853269984665640564039457584007908834671663
Sage: F = GF(p)
Sage: j = F(1728)*((F(4)*F(0)^3)/(F(4)*F(0)^3+F(27)*F(7)^2))
Sage: j == F(0)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1412 )
try:
 _st_.current_tex_line = _sage_const_1456 
 _st_.commandline(_sage_const_34 , r"""
Sage: z = ComplexField(100)(0,1)
Sage: z # (0+1i)
Sage: elliptic_j(z)
Sage: # j-function only defined for positive imaginary arguments
Sage: z = ComplexField(100)(1,-1)
Sage: try:
....:     elliptic_j(z)
....: except PariError:
....:     pass
Sage: # root at (-1+i sqrt(3))/2
Sage: z = ComplexField(100)(-1,sqrt(3))/2
Sage: elliptic_j(z)
Sage: elliptic_j(z).imag().round()
Sage: elliptic_j(z).real().round()
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1471 )
try:
 _st_.current_tex_line = _sage_const_1632 
 _st_.commandline(_sage_const_35 , r"""
Sage: D = -3
Sage: p = 115792089237316195423570985008687907853269984665640564039457584007908834671663
Sage: r = 115792089237316195423570985008687907852837564279074904382605163141518161494337
Sage: t = p+1-r
Sage: v_sqr = (4*p - t^2)/abs(D)
Sage: v_sqr.is_integer()
Sage: v = sqrt(v_sqr)
Sage: v.is_integer()
Sage: 4*p == t^2 + abs(D)*v^2
Sage: v
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1643 )
try:
 _st_.current_tex_line = _sage_const_1648 
 _st_.commandline(_sage_const_36 , r"""
Sage: F = GF(p)
Sage: for c2 in F:
....:     try: # quadratic residue
....:         _ = c2.nth_root(2)
....:     except ValueError: # quadratic non residue
....:         break
Sage: c2
Sage: for c3 in F:
....:     try:
....:         _ = c3.nth_root(3)
....:     except ValueError:
....:         break
Sage: c3
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1662 )
try:
 _st_.current_tex_line = _sage_const_1664 
 _st_.commandline(_sage_const_37 , r"""
Sage: C1 = EllipticCurve(F,[0,1])
Sage: C1.order() == r
Sage: C2 = EllipticCurve(F,[0,c2^3])
Sage: C2.order() == r
Sage: C3 = EllipticCurve(F,[0,c3^2])
Sage: C3.order() == r
Sage: C4 = EllipticCurve(F,[0,c3^2*c2^3])
Sage: C4.order() == r
Sage: C5 = EllipticCurve(F,[0,c3^(-2)])
Sage: C5.order() == r
Sage: C6 = EllipticCurve(F,[0,c3^(-2)*c2^3])
Sage: C6.order() == r
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1677 )
try:
 _st_.current_tex_line = _sage_const_1687 
 _st_.commandline(_sage_const_38 , r"""
Sage: b1=86844066927987146567678238756515930889952488499230423029593188005931626003754
Sage: for b2 in F:
....:     try:
....:         d = (b2/b1).nth_root(3)
....:         try:
....:             _ = d.nth_root(2)
....:             if d != 0:
....:                 break
....:         except ValueError:
....:             pass
....:     except ValueError:
....:         pass
Sage: b2
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1701 )
try:
 _st_.current_tex_line = _sage_const_1748 
 _st_.commandline(_sage_const_39 , r"""
Sage: for k in range(1,42): # Fermat's little theorem
....:     if (43^k-1)%13 == 0:
....:         break
Sage: k
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1753 )
try:
 _st_.current_tex_line = _sage_const_1766 
 _st_.commandline(_sage_const_40 , r"""
Sage: F43 = GF(43)
Sage: c2 = F43(5)
....: try: # quadratic residue
....:     c2.nth_root(2)
....: except ValueError: # quadratic non residue
....:     c2
Sage: c3 =F43(36)
....: try:
....:     c3.nth_root(3)
....: except ValueError:
....:     c3
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1778 )
try:
 _st_.current_tex_line = _sage_const_1782 
 _st_.commandline(_sage_const_41 , r"""
Sage: BLS61 = EllipticCurve(F43,[0,1])
Sage: BLS61.order() == 39
Sage: BLS62 = EllipticCurve(F43,[0,c2^3])
Sage: BLS62.order() == 39
Sage: BLS63 = EllipticCurve(F43,[0,c3^2])
Sage: BLS63.order() == 39
Sage: BLS64 = EllipticCurve(F43,[0,c3^2*c2^3])
Sage: BLS64.order() == 39
Sage: BLS65 = EllipticCurve(F43,[0,c3^(-2)])
Sage: BLS65.order() == 39
Sage: BLS66 = EllipticCurve(F43,[0,c3^(-2)*c2^3])
Sage: BLS66.order() == 39
Sage: BLS6 = BLS63 # our BLS6 curve in the book
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1796 )
_st_.current_tex_line = _sage_const_1802 
_st_.blockbegin()
try:
 BLS63p = BLS63.plot()
except:
 _st_.goboom(_sage_const_1804 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_1806 
 _st_.plot(_sage_const_8 , format='notprovided', _p_=BLS63p)
except:
 _st_.goboom(_sage_const_1806 )
try:
 _st_.current_tex_line = _sage_const_1825 
 _st_.commandline(_sage_const_42 , r"""
Sage: P = BLS6(9,2)
Sage: Q = 3*P
Sage: Q.xy()
Sage: BLS6_13 = []
Sage: for x in range(0,13): # cyclic of order 13
....:     P = x*Q
....:     BLS6_13.append(P)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1833 )
try:
 _st_.current_tex_line = _sage_const_1907 
 _st_.commandline(_sage_const_43 , r"""
Sage: F43 = GF(43)
Sage: F43t.<t> = F43[]
Sage: p = F43t(t^6+6)
Sage: p.is_irreducible()
Sage: F43_6.<v> = GF(43^6, name='v', modulus=p)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1913 )
try:
 _st_.current_tex_line = _sage_const_1919 
 _st_.commandline(_sage_const_44 , r"""
Sage: BLS6 = EllipticCurve (F43_6,[0 ,6]) # curve extension
Sage: INF = BLS6(0) # point at infinity
Sage: for P in INF.division_points(13): # full 13-torsion
....: # PI(P) == [q]P
....:     if P.order() == 13: # exclude point at infinity
....:         PiP = BLS6([a.frobenius() for a in P])
....:         qP = 43*P
....:         if PiP == qP:
....:             break
Sage: P.xy()
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1930 )
try:
 _st_.current_tex_line = _sage_const_1936 
 _st_.commandline(_sage_const_45 , r"""
Sage: Q = BLS6(7*v^2,16*v^3)
Sage: BLS6_13_2 = []
Sage: for x in range(0,13):
....:     P = x*Q
....:     BLS6_13_2.append(P)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1942 )
try:
 _st_.current_tex_line = _sage_const_1977 
 _st_.commandline(_sage_const_46 , r"""
Sage: g1 = BLS6([13,15])
Sage: g2 = BLS6([7*v^2, 16*v^3])
Sage: g1.weil_pairing(g2,13)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1981 )
_st_.endofdoc()

